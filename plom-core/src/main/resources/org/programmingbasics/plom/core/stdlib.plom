 module .{program} {
 stdlib { -1 }
 vardecls {
 var . {test global var } @ {object }
 }
 function . {input: { . {prompt } @ {string } } } { @ {string } } { } {
 // Displays a prompt asking for input and returns the value entered by the user
 primitive
 }
 function . {log string: { . {value } @ {string } } } { @ {void } } { } {
 // Writes a string into the debug log
 primitive
 }
 function . {log: { . {value } @ {object } } } { @ {void } } { } {
 // Writes a value into the debug log
 . {log string: { . {value } . {to string } } }
 }
 function . {print string: { . {value } @ {string } } } { @ {void } } { } {
 // Prints a string to the screen
 primitive
 }
 function . {print: { . {value } @ {object } } } { @ {void } } { } {
 // Prints a value to the screen
 . {print string: { . {value } . {to string } } }
 }
 function . {range from: { . {from } @ {number } }to: { . {to } @ {number } } } { @ {number iterator } } { } {
 return @ {number range iterator } . {from: { . {from } }to: { . {to } } }
 }
 function . {range start: { . {start } @ {number } }<: { . {end } @ {number } } } { @ {number iterator } } { } {
 return @ {number range iterator exclusive } . {start: { . {start } }<: { . {end } } }
 }
 function . {test: { . {arg1 } @ {number } } } { @ {number } } { } {
 }
 class @ { JS object } extends @ {object } {
 vardecls {
 }
 function . {as boolean } { @ {boolean } } { } {
 primitive
 }
 function . {as function } { @ {object } } { } {
 primitive
 }
 function . {as number } { @ {number } } { } {
 primitive
 }
 function . {as string } { @ {string } } { } {
 primitive
 }
 function . {at: { . {index } @ {number } } } { @ {JS object } } { } {
 primitive
 }
 function . {at: { . {index } @ {number } }set: { . {value } @ {object } } } { @ {void } } { } {
 primitive
 }
 function . {call: { . {method } @ {string } } } { @ {JS object } } { } {
 primitive
 }
 function . {call: { . {method } @ {string } }with: { . {param1 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {call: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {call: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {call: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } }and: { . {param4 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {call: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } }and: { . {param4 } @ {JS object } }and: { . {param5 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {call: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } }and: { . {param4 } @ {JS object } }and: { . {param5 } @ {JS object } }and: { . {param6 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {call: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } }and: { . {param4 } @ {JS object } }and: { . {param5 } @ {JS object } }and: { . {param6 } @ {JS object } }and: { . {param7 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {call: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } }and: { . {param4 } @ {JS object } }and: { . {param5 } @ {JS object } }and: { . {param6 } @ {JS object } }and: { . {param7 } @ {JS object } }and: { . {param8 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {call: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } }and: { . {param4 } @ {JS object } }and: { . {param5 } @ {JS object } }and: { . {param6 } @ {JS object } }and: { . {param7 } @ {JS object } }and: { . {param8 } @ {JS object } }and: { . {param9 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {get: { . {key } @ {string } } } { @ {JS object } } { } {
 primitive
 }
 function . {get: { . {key } @ {string } }put: { . {value } @ {object } } } { @ {void } } { } {
 this . {set: { . {key } }to: { . {value } } }
 }
 function . {new: { . {method } @ {string } } } { @ {JS object } } { } {
 primitive
 }
 function . {new: { . {method } @ {string } }with: { . {param1 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {new: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {new: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {new: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } }and: { . {param4 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {new: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } }and: { . {param4 } @ {JS object } }and: { . {param5 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {new: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } }and: { . {param4 } @ {JS object } }and: { . {param5 } @ {JS object } }and: { . {param6 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {new: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } }and: { . {param4 } @ {JS object } }and: { . {param5 } @ {JS object } }and: { . {param6 } @ {JS object } }and: { . {param7 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {new: { . {method } @ {string } }with: { . {param1 } @ {JS object } }and: { . {param2 } @ {JS object } }and: { . {param3 } @ {JS object } }and: { . {param4 } @ {JS object } }and: { . {param5 } @ {JS object } }and: { . {param6 } @ {JS object } }and: { . {param7 } @ {JS object } }and: { . {param8 } @ {JS object } } } { @ {JS object } } { } {
 primitive
 }
 function . {passthrough to Plom } { @ {object } } { } {
 primitive
 }
 function . {set: { . {key } @ {string } }to: { . {value } @ {object } } } { @ {void } } { } {
 primitive
 }
 classfunction . {from boolean: { . {value } @ {boolean } } } { @ {JS object } } { } {
 primitive
 }
 classfunction . {from function: { . {value } @ {object } } } { @ {JS object } } { } {
 primitive
 }
 classfunction . {from number: { . {value } @ {number } } } { @ {JS object } } { } {
 primitive
 }
 classfunction . {from string: { . {value } @ {string } } } { @ {JS object } } { } {
 primitive
 }
 classfunction . {globals } { @ {JS object } } { } {
 primitive
 }
 classfunction . {passthrough to JS: { . {value } @ {object } } } { @ {JS object } } { } {
 primitive
 }
 }
 class @ { Test } extends @ {object } {
 vardecls {
 }
 constructor . {new } { } {
 }
 }
 class @ { boolean } extends @ {object } {
 vardecls {
 }
 function . {=: { . {val } @ {object } } } { @ {boolean } } { } {
 primitive
 }
 function . {not } { @ {boolean } } { } {
 primitive
 }
 function . {to string } { @ {string } } { } {
 if { this = true } {
 return"true"
 }
 else {
 return"false"
 }

 }
 }
 class @ { null } extends @ {object } {
 vardecls {
 }
 function . {= } { @ {boolean } } { } {
 primitive
 }
 }
 class @ { number } extends @ {object } {
 vardecls {
 }
 function . {*: { . {val } @ {number } } } { @ {number } } { } {
 primitive
 }
 function . {+: { . {val } @ {number } } } { @ {number } } { } {
 primitive
 }
 function . {-: { . {val } @ {number } } } { @ {number } } { } {
 primitive
 }
 function . {/: { . {val } @ {number } } } { @ {number } } { } {
 primitive
 }
 function . {absolute } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"abs" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {arccosine } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"acos" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {arcsine } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"asin" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {arctangent } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"atan" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {ceiling } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"ceil" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {cosine } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"cos" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {floor } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"floor" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {ln } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"log" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {log 10 } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"log10" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {log 2 } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"log2" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {round } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"round" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {sine } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"sin" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {square root } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"sqrt" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {tangent } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"tan" }with: { @ {JS object } . {from number: { this } } } } . {as number }
 }
 function . {to power: { . {x } @ {number } } } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"pow" }with: { @ {JS object } . {from number: { this } } }and: { @ {JS object } . {from number: { . {x } } } } } . {as number }
 }
 classfunction . {arctangent of y: { . {y } @ {number } }x: { . {x } @ {number } } } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {call: {"atan2" }with: { @ {JS object } . {from number: { . {y } } } }and: { @ {JS object } . {from number: { . {x } } } } } . {as number }
 }
 classfunction . {e } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {get: {"E" } } . {as number }
 }
 classfunction . {pi } { @ {number } } { } {
 return @ {JS object } . {globals } . {get: {"Math" } } . {get: {"PI" } } . {as number }
 }
 }
 class @ { number iterator } extends @ {object } {
 vardecls {
 }
 function . {at end } { @ {boolean } } { } {
 return true
 }
 function . {next } { @ {number iterator } } { } {
 return this
 }
 function . {value } { @ {number } } { } {
 return null
 }
 constructor . {new } { } {
 super . {new }
 }
 }
 class @ { number range iterator } extends @ {number iterator } {
 vardecls {
 var . {current } @ {number }

 var . {start } @ {number }

 var . {end } @ {number }
 }
 function . {at end } { @ {boolean } } { } {
 return . {current } > . {end }
 }
 function . {next } { @ {number range iterator } } { } {
 . {current } := . {current } + 1
 return this
 }
 function . {value } { @ {number } } { } {
 return . {current }
 }
 constructor . {from: { . {from } @ {number } }to: { . {to } @ {number } } } { } {
 super . {new }
 . {start } := . {from }
 . {end } := . {to }
 . {current } := . {start }
 }
 }
 class @ { number range iterator exclusive } extends @ {number iterator } {
 vardecls {
 var . {current } @ {number }

 var . {start } @ {number }

 var . {end } @ {number }
 }
 function . {at end } { @ {boolean } } { } {
 return . {current } >= . {end }
 }
 function . {next } { @ {number range iterator exclusive } } { } {
 . {current } := . {current } + 1
 return this
 }
 function . {value } { @ {number } } { } {
 return . {current }
 }
 constructor . {start: { . {start number } @ {number } }<: { . {end range } @ {number } } } { } {
 super . {new }
 . {start } := . {start number }
 . {end } := . {end range }
 . {current } := . {start }
 }
 }
 class @ { object } {
 vardecls {
 }
 function . {!=: { . {val } @ {object } } } { @ {boolean } } { } {
 return ( this = . {val } ) . {not }
 }
 function . {=: { . {val } @ {object } } } { @ {boolean } } { } {
 primitive
 }
 function . {to string } { @ {string } } { } {
 primitive
 }
 constructor . {new } { } {
 primitive
 }
 }
 class @ { string } extends @ {object } {
 vardecls {
 }
 function . {+: { . {val } @ {string } } } { @ {boolean } } { } {
 primitive
 }
 function . {=: { . {val } @ {object } } } { @ {boolean } } { } {
 primitive
 }
 function . {substring from: { . {from } @ {number } }to: { . {to } @ {number } } } { @ {string } } { } {
 primitive
 }
 function . {to string } { @ {string } } { } {
 return this
 }
 }
 }